package com.posto.gas.constrollers;

import com.posto.gas.entities.FuelDispenser;
import com.posto.gas.entities.dtos.FuelDispenserDTO;
import com.posto.gas.services.FuelDispenserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
@RequestMapping(value = "/fuel_dispensers")
public class FuelDispenserController {

    @Autowired
    private FuelDispenserService fuelDispenserService;

    @GetMapping
    public ResponseEntity<List<FuelDispenser>> findAll(){
        List<FuelDispenser> fuelDispensers = fuelDispenserService.findAll();
        return ResponseEntity.ok().body(fuelDispensers);
    }

    @GetMapping("/{id}")
    public ResponseEntity<FuelDispenser> findById(@PathVariable Long id){
        FuelDispenser fuelDispenser = fuelDispenserService.findById(id);
        return ResponseEntity.ok().body(fuelDispenser);
    }

    @PostMapping
    public ResponseEntity<List<FuelDispenser>> postFuels(@RequestBody List<FuelDispenser> fuelList){
        // Saves the fuel object with the provided data (@RequestBody) + generated ID (generated by the database)
        List<FuelDispenser> savedFuelDispensers = fuelDispenserService.insertAll(fuelList);
        return ResponseEntity.ok().body(savedFuelDispensers);
    }

    @PostMapping("/one")
    public ResponseEntity<FuelDispenser> postFuel(@RequestBody FuelDispenserDTO dto) {
        FuelDispenser savedFuelDispenser = fuelDispenserService.insert(dto);
        return ResponseEntity.ok(savedFuelDispenser);
    }

    @PutMapping(value = "/{id}")
    public ResponseEntity<FuelDispenser> updateFuel(@PathVariable Long id, @RequestBody FuelDispenserDTO dto){
        FuelDispenser updatedFuelDispensers = fuelDispenserService.update(id, dto);
        return ResponseEntity.ok().body(updatedFuelDispensers);
    }

    @DeleteMapping(value = "/{id}")
    public ResponseEntity<Void> delete(@PathVariable Long id){
        fuelDispenserService.delete(id);
        return ResponseEntity.noContent().build();
    }

}

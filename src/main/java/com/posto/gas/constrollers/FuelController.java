package com.posto.gas.constrollers;

import com.posto.gas.entities.Fuel;
import com.posto.gas.entities.FuelDispenser;
import com.posto.gas.entities.dtos.FuelDTO;
import com.posto.gas.services.FuelDispenserService;
import com.posto.gas.services.FuelService;
import com.posto.gas.services.OrderService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
@RequestMapping(value = "/fuels")
public class FuelController {

    @Autowired
    private FuelService fuelService;

    @Autowired
    private FuelDispenserService fuelDispenserService;

    @Autowired
    private OrderService orderService;

    @GetMapping
    public ResponseEntity<List<Fuel>> findAll(){
        List<Fuel> fuels = fuelService.findAll();
        return ResponseEntity.ok().body(fuels);
    }

    @GetMapping("/{id}")
    public ResponseEntity<Fuel> findById(@PathVariable Long id){
        Fuel fuel = fuelService.findById(id);
        return ResponseEntity.ok().body(fuel);
    }

    @PostMapping
    public ResponseEntity<List<Fuel>> postFuels(@RequestBody List<FuelDTO> dtoList){
        // Saves the fuel object with the provided data (@RequestBody) + generated ID (generated by the database)
        List<Fuel> savedFuels = fuelService.insertAll(dtoList);
        return ResponseEntity.ok().body(savedFuels);
    }

    @PostMapping("/one")
    public ResponseEntity<Fuel> postFuel(@RequestBody FuelDTO dto) {
        Fuel savedFuel = fuelService.insert(dto);
        return ResponseEntity.ok(savedFuel);
    }

    @PutMapping(value = "/{id}")
    public ResponseEntity<Fuel> updateFuel(@PathVariable Long id, @RequestBody FuelDTO dto){
        Fuel updatedFuel = fuelService.update(id, dto);
        return ResponseEntity.ok().body(updatedFuel);
    }

    @DeleteMapping(value = "/{id}")
    public ResponseEntity<Void> delete(@PathVariable Long id){
        orderService.deleteAllByFuel(id);
        fuelService.delete(id);
        return ResponseEntity.noContent().build();
    }

}
